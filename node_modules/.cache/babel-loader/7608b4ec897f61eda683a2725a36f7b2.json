{"ast":null,"code":"var _jsxFileName = \"/Users/ianflaherty/general_assembly/hummingbird/unit_2/Project2/voter/src/components/Start.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport Musicvideo from './Video/Musicvideo.mp4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst airtableBase = process.env.REACT_APP_AIRTABLE_BASE;\nconst airtableKey = process.env.REACT_APP_AIRTABLE_Key;\nconst URL = `https://api.airtable.com/v0/${airtableBase}/ClassMates`;\nconst URL2 = `https://api.airtable.com/v0/${airtableBase}/Questions`; // console.log(airtableBase);\n// console.log(airtableKey);\n\nconst {\n  question,\n  setQuestion\n} = use;\nconst config = {\n  headers: {\n    Authorization: `Bearer ${airtableKey}`\n  }\n}; // console.log(URL);\n\nexport default function Start() {\n  axios.get(URL, config);\n  axios.get(URL2, config);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    autoPlay: true,\n    loop: true,\n    muted: true,\n    style: {\n      position: 'absolute',\n      width: '100%',\n      left: '50%',\n      top: '50%',\n      height: '100%',\n      objectFit: 'cover',\n      transform: 'translate(-50%, -50%)',\n      zIndex: '-1'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"source\", {\n      src: Musicvideo,\n      type: \"video/mp4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = Start;\n\nvar _c;\n\n$RefreshReg$(_c, \"Start\");","map":{"version":3,"sources":["/Users/ianflaherty/general_assembly/hummingbird/unit_2/Project2/voter/src/components/Start.jsx"],"names":["React","axios","Musicvideo","airtableBase","process","env","REACT_APP_AIRTABLE_BASE","airtableKey","REACT_APP_AIRTABLE_Key","URL","URL2","question","setQuestion","use","config","headers","Authorization","Start","get","position","width","left","top","height","objectFit","transform","zIndex"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAAjC;AACA,MAAMC,WAAW,GAAGH,OAAO,CAACC,GAAR,CAAYG,sBAAhC;AACA,MAAMC,GAAG,GAAI,+BAA8BN,YAAa,aAAxD;AACA,MAAMO,IAAI,GAAI,+BAA8BP,YAAa,YAAzD,C,CACA;AACA;;AACA,MAAM;AAACQ,EAAAA,QAAD;AAAWC,EAAAA;AAAX,IAA0BC,GAAhC;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,EAAG,UAAST,WAAY;AAD9B;AADI,CAAf,C,CAKA;;AACA,eAAe,SAASU,KAAT,GAAiB;AAC9BhB,EAAAA,KAAK,CAACiB,GAAN,CAAUT,GAAV,EAAeK,MAAf;AACAb,EAAAA,KAAK,CAACiB,GAAN,CAAUR,IAAV,EAAgBI,MAAhB;AACA,sBACE;AACA,IAAA,QAAQ,MADR;AAEA,IAAA,IAAI,MAFJ;AAGA,IAAA,KAAK,MAHL;AAIA,IAAA,KAAK,EAAG;AACNK,MAAAA,QAAQ,EAAE,UADJ;AAENC,MAAAA,KAAK,EAAE,MAFD;AAGNC,MAAAA,IAAI,EAAE,KAHA;AAINC,MAAAA,GAAG,EAAE,KAJC;AAKNC,MAAAA,MAAM,EAAE,MALF;AAMNC,MAAAA,SAAS,EAAE,OANL;AAONC,MAAAA,SAAS,EAAE,uBAPL;AAQNC,MAAAA,MAAM,EAAE;AARF,KAJR;AAAA,2BAeF;AAAQ,MAAA,GAAG,EAAExB,UAAb;AAAyB,MAAA,IAAI,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AAfE;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;KAzBuBe,K","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport Musicvideo from './Video/Musicvideo.mp4';\n\nconst airtableBase = process.env.REACT_APP_AIRTABLE_BASE;\nconst airtableKey = process.env.REACT_APP_AIRTABLE_Key;\nconst URL = `https://api.airtable.com/v0/${airtableBase}/ClassMates`;\nconst URL2 = `https://api.airtable.com/v0/${airtableBase}/Questions`;\n// console.log(airtableBase);\n// console.log(airtableKey);\nconst {question, setQuestion} = use\nconst config = {\n  headers: {\n    Authorization: `Bearer ${airtableKey}`,\n},\n};\n// console.log(URL);\nexport default function Start() {\n  axios.get(URL, config);\n  axios.get(URL2, config);\n  return (\n    <video \n    autoPlay\n    loop\n    muted\n    style= {{\n      position: 'absolute',\n      width: '100%',\n      left: '50%',\n      top: '50%',\n      height: '100%',\n      objectFit: 'cover',\n      transform: 'translate(-50%, -50%)',\n      zIndex: '-1'\n    }}\n  >\n  <source src={Musicvideo} type='video/mp4'/>\n  \n  </video>\n  )\n    \n  \n}\n\n"]},"metadata":{},"sourceType":"module"}